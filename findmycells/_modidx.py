# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/findmycells',
                'doc_host': 'https://Defense-Circuits-Lab.github.io',
                'git_url': 'https://github.com/Defense-Circuits-Lab/findmycells',
                'lib_path': 'findmycells'},
  'syms': { 'findmycells.core': { 'findmycells.core.DataLoader': ('core.html#dataloader', 'findmycells/core.py'),
                                  'findmycells.core.DataLoader.determine_reader': ( 'core.html#dataloader.determine_reader',
                                                                                    'findmycells/core.py'),
                                  'findmycells.core.DataLoader.load': ('core.html#dataloader.load', 'findmycells/core.py'),
                                  'findmycells.core.DataReader': ('core.html#datareader', 'findmycells/core.py'),
                                  'findmycells.core.DataReader._set_defaults_for_unspecified_or_invalid_configs': ( 'core.html#datareader._set_defaults_for_unspecified_or_invalid_configs',
                                                                                                                    'findmycells/core.py'),
                                  'findmycells.core.DataReader.assert_correct_output_format': ( 'core.html#datareader.assert_correct_output_format',
                                                                                                'findmycells/core.py'),
                                  'findmycells.core.DataReader.default_config_value_types': ( 'core.html#datareader.default_config_value_types',
                                                                                              'findmycells/core.py'),
                                  'findmycells.core.DataReader.default_config_values': ( 'core.html#datareader.default_config_values',
                                                                                         'findmycells/core.py'),
                                  'findmycells.core.DataReader.key_to_configs_attribute_in_database': ( 'core.html#datareader.key_to_configs_attribute_in_database',
                                                                                                        'findmycells/core.py'),
                                  'findmycells.core.DataReader.read': ('core.html#datareader.read', 'findmycells/core.py'),
                                  'findmycells.core.DataReader.readable_filetype_extensions': ( 'core.html#datareader.readable_filetype_extensions',
                                                                                                'findmycells/core.py'),
                                  'findmycells.core.DataReader.set_optional_configs': ( 'core.html#datareader.set_optional_configs',
                                                                                        'findmycells/core.py'),
                                  'findmycells.core.DefaultConfigs': ('core.html#defaultconfigs', 'findmycells/core.py'),
                                  'findmycells.core.DefaultConfigs.__init__': ('core.html#defaultconfigs.__init__', 'findmycells/core.py'),
                                  'findmycells.core.ProcessingObject': ('core.html#processingobject', 'findmycells/core.py'),
                                  'findmycells.core.ProcessingObject.__init__': ( 'core.html#processingobject.__init__',
                                                                                  'findmycells/core.py'),
                                  'findmycells.core.ProcessingObject.add_processing_specific_infos_to_updates': ( 'core.html#processingobject.add_processing_specific_infos_to_updates',
                                                                                                                  'findmycells/core.py'),
                                  'findmycells.core.ProcessingObject.default_configs': ( 'core.html#processingobject.default_configs',
                                                                                         'findmycells/core.py'),
                                  'findmycells.core.ProcessingObject.processing_type': ( 'core.html#processingobject.processing_type',
                                                                                         'findmycells/core.py'),
                                  'findmycells.core.ProcessingObject.run_all_strategies': ( 'core.html#processingobject.run_all_strategies',
                                                                                            'findmycells/core.py'),
                                  'findmycells.core.ProcessingObject.update_database': ( 'core.html#processingobject.update_database',
                                                                                         'findmycells/core.py'),
                                  'findmycells.core.ProcessingStrategy': ('core.html#processingstrategy', 'findmycells/core.py'),
                                  'findmycells.core.ProcessingStrategy.add_strategy_specific_infos_to_updates': ( 'core.html#processingstrategy.add_strategy_specific_infos_to_updates',
                                                                                                                  'findmycells/core.py'),
                                  'findmycells.core.ProcessingStrategy.default_configs': ( 'core.html#processingstrategy.default_configs',
                                                                                           'findmycells/core.py'),
                                  'findmycells.core.ProcessingStrategy.determine_correct_step_index': ( 'core.html#processingstrategy.determine_correct_step_index',
                                                                                                        'findmycells/core.py'),
                                  'findmycells.core.ProcessingStrategy.processing_type': ( 'core.html#processingstrategy.processing_type',
                                                                                           'findmycells/core.py'),
                                  'findmycells.core.ProcessingStrategy.run': ('core.html#processingstrategy.run', 'findmycells/core.py'),
                                  'findmycells.core.ProcessingStrategy.strategy_name': ( 'core.html#processingstrategy.strategy_name',
                                                                                         'findmycells/core.py'),
                                  'findmycells.core.ProcessingStrategy.update_database': ( 'core.html#processingstrategy.update_database',
                                                                                           'findmycells/core.py')},
            'findmycells.preprocessing.specs': { 'findmycells.preprocessing.specs.PreprocessingObject': ( 'preprocessing_specs.html#preprocessingobject',
                                                                                                          'findmycells/preprocessing/specs.py'),
                                                 'findmycells.preprocessing.specs.PreprocessingObject.__init__': ( 'preprocessing_specs.html#preprocessingobject.__init__',
                                                                                                                   'findmycells/preprocessing/specs.py'),
                                                 'findmycells.preprocessing.specs.PreprocessingObject._load_microscopy_image': ( 'preprocessing_specs.html#preprocessingobject._load_microscopy_image',
                                                                                                                                 'findmycells/preprocessing/specs.py'),
                                                 'findmycells.preprocessing.specs.PreprocessingObject._load_rois': ( 'preprocessing_specs.html#preprocessingobject._load_rois',
                                                                                                                     'findmycells/preprocessing/specs.py'),
                                                 'findmycells.preprocessing.specs.PreprocessingObject.add_processing_specific_infos_to_updates': ( 'preprocessing_specs.html#preprocessingobject.add_processing_specific_infos_to_updates',
                                                                                                                                                   'findmycells/preprocessing/specs.py'),
                                                 'findmycells.preprocessing.specs.PreprocessingObject.adjust_rois': ( 'preprocessing_specs.html#preprocessingobject.adjust_rois',
                                                                                                                      'findmycells/preprocessing/specs.py'),
                                                 'findmycells.preprocessing.specs.PreprocessingObject.crop_rgb_zstack': ( 'preprocessing_specs.html#preprocessingobject.crop_rgb_zstack',
                                                                                                                          'findmycells/preprocessing/specs.py'),
                                                 'findmycells.preprocessing.specs.PreprocessingObject.default_configs': ( 'preprocessing_specs.html#preprocessingobject.default_configs',
                                                                                                                          'findmycells/preprocessing/specs.py'),
                                                 'findmycells.preprocessing.specs.PreprocessingObject.load_image_and_rois': ( 'preprocessing_specs.html#preprocessingobject.load_image_and_rois',
                                                                                                                              'findmycells/preprocessing/specs.py'),
                                                 'findmycells.preprocessing.specs.PreprocessingObject.processing_type': ( 'preprocessing_specs.html#preprocessingobject.processing_type',
                                                                                                                          'findmycells/preprocessing/specs.py'),
                                                 'findmycells.preprocessing.specs.PreprocessingObject.save_preprocessed_images_on_disk': ( 'preprocessing_specs.html#preprocessingobject.save_preprocessed_images_on_disk',
                                                                                                                                           'findmycells/preprocessing/specs.py'),
                                                 'findmycells.preprocessing.specs.PreprocessingObject.save_preprocessed_rois_in_database': ( 'preprocessing_specs.html#preprocessingobject.save_preprocessed_rois_in_database',
                                                                                                                                             'findmycells/preprocessing/specs.py'),
                                                 'findmycells.preprocessing.specs.PreprocessingStrategy': ( 'preprocessing_specs.html#preprocessingstrategy',
                                                                                                            'findmycells/preprocessing/specs.py'),
                                                 'findmycells.preprocessing.specs.PreprocessingStrategy.processing_type': ( 'preprocessing_specs.html#preprocessingstrategy.processing_type',
                                                                                                                            'findmycells/preprocessing/specs.py')},
            'findmycells.readers.microscopy_images': { 'findmycells.readers.microscopy_images.CZIReader': ( 'readers_microscopy_images.html#czireader',
                                                                                                            'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.CZIReader.read': ( 'readers_microscopy_images.html#czireader.read',
                                                                                                                 'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.CZIReader.readable_filetype_extensions': ( 'readers_microscopy_images.html#czireader.readable_filetype_extensions',
                                                                                                                                         'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.FromExcelReader': ( 'readers_microscopy_images.html#fromexcelreader',
                                                                                                                  'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.FromExcelReader.read': ( 'readers_microscopy_images.html#fromexcelreader.read',
                                                                                                                       'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.FromExcelReader.readable_filetype_extensions': ( 'readers_microscopy_images.html#fromexcelreader.readable_filetype_extensions',
                                                                                                                                               'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.MicroscopyImageReaders': ( 'readers_microscopy_images.html#microscopyimagereaders',
                                                                                                                         'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.MicroscopyImageReaders._get_adapted_configs_value': ( 'readers_microscopy_images.html#microscopyimagereaders._get_adapted_configs_value',
                                                                                                                                                    'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.MicroscopyImageReaders.assert_correct_output_format': ( 'readers_microscopy_images.html#microscopyimagereaders.assert_correct_output_format',
                                                                                                                                                      'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.MicroscopyImageReaders.default_config_value_types': ( 'readers_microscopy_images.html#microscopyimagereaders.default_config_value_types',
                                                                                                                                                    'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.MicroscopyImageReaders.default_config_values': ( 'readers_microscopy_images.html#microscopyimagereaders.default_config_values',
                                                                                                                                               'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.MicroscopyImageReaders.key_to_configs_attribute_in_database': ( 'readers_microscopy_images.html#microscopyimagereaders.key_to_configs_attribute_in_database',
                                                                                                                                                              'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.RegularImageFiletypeReader': ( 'readers_microscopy_images.html#regularimagefiletypereader',
                                                                                                                             'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.RegularImageFiletypeReader._attempt_to_load_image_at_correct_format': ( 'readers_microscopy_images.html#regularimagefiletypereader._attempt_to_load_image_at_correct_format',
                                                                                                                                                                      'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.RegularImageFiletypeReader.read': ( 'readers_microscopy_images.html#regularimagefiletypereader.read',
                                                                                                                                  'findmycells/readers/microscopy_images.py'),
                                                       'findmycells.readers.microscopy_images.RegularImageFiletypeReader.readable_filetype_extensions': ( 'readers_microscopy_images.html#regularimagefiletypereader.readable_filetype_extensions',
                                                                                                                                                          'findmycells/readers/microscopy_images.py')},
            'findmycells.readers.rois': { 'findmycells.readers.rois.ImageJROIReader': ( 'readers_rois.html#imagejroireader',
                                                                                        'findmycells/readers/rois.py'),
                                          'findmycells.readers.rois.ImageJROIReader.read': ( 'readers_rois.html#imagejroireader.read',
                                                                                             'findmycells/readers/rois.py'),
                                          'findmycells.readers.rois.ImageJROIReader.readable_filetype_extensions': ( 'readers_rois.html#imagejroireader.readable_filetype_extensions',
                                                                                                                     'findmycells/readers/rois.py'),
                                          'findmycells.readers.rois.ROIReaders': ( 'readers_rois.html#roireaders',
                                                                                   'findmycells/readers/rois.py'),
                                          'findmycells.readers.rois.ROIReaders.assert_correct_output_format': ( 'readers_rois.html#roireaders.assert_correct_output_format',
                                                                                                                'findmycells/readers/rois.py'),
                                          'findmycells.readers.rois.ROIReaders.default_config_value_types': ( 'readers_rois.html#roireaders.default_config_value_types',
                                                                                                              'findmycells/readers/rois.py'),
                                          'findmycells.readers.rois.ROIReaders.default_config_values': ( 'readers_rois.html#roireaders.default_config_values',
                                                                                                         'findmycells/readers/rois.py'),
                                          'findmycells.readers.rois.ROIReaders.key_to_configs_attribute_in_database': ( 'readers_rois.html#roireaders.key_to_configs_attribute_in_database',
                                                                                                                        'findmycells/readers/rois.py')},
            'findmycells.utils': { 'findmycells.utils.get_polygon_from_instance_segmentation': ( 'utils.html#get_polygon_from_instance_segmentation',
                                                                                                 'findmycells/utils.py'),
                                   'findmycells.utils.list_dir_no_hidden': ('utils.html#list_dir_no_hidden', 'findmycells/utils.py'),
                                   'findmycells.utils.load_zstack_as_array_from_single_planes': ( 'utils.html#load_zstack_as_array_from_single_planes',
                                                                                                  'findmycells/utils.py'),
                                   'findmycells.utils.unpad_x_y_dims_in_3d_array': ( 'utils.html#unpad_x_y_dims_in_3d_array',
                                                                                     'findmycells/utils.py')}}}